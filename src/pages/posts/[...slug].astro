---
import { getCollection, render } from "astro:content";
import slugify from "slugify";
import type { GetStaticPaths } from "astro";

import PostLayout from "../../layouts/PostLayout.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");

  const headings = await Promise.all(
    posts.map(async (post) => {
      const data = await render(post);
      return data.headings;
    }),
  );

  return posts.map((entry, index) => ({
    params: {
      slug: `${slugify(entry.data.title.toLowerCase())}`,
      id: entry.id,
    },
    props: { entry, headings: headings[index] },
  }));
}) satisfies GetStaticPaths;

const { entry, headings } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(entry);

//
// const baseUrl = import.meta.env.DEV
//   ? "http://localhost:4321"
//   : new URL(Astro.request.url).origin;

const baseUrl = "https://bukola.pages.dev";

const { slug, title: pageTitle, description } = entry.data;

// const ogImage = new URL(`/open-graph/${slug}.png`, baseUrl).toString();
const ogImage = new URL(`/open-graph/${entry.id}.png`, baseUrl).toString();
---

<PostLayout
  {...entry.data}
  headings={headings}
  body={entry.body}
  ogImage={ogImage}
  baseUrl={baseUrl}
  pageTitle={pageTitle}
  description={description}
  minutesRead={remarkPluginFrontmatter.minutesRead}
>
  <Content />
</PostLayout>

<style></style>
